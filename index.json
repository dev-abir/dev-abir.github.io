[{"content":"ðŸ”— Github repo AI plays-python A simple flappy bird game, written in Python, where the player is AI.\nA flock of birds will try to survive in this game (rather environment), the best ones will continue, rest will die. Much like our evolution :)\nIt uses the concept of Evolutionary artificial neural networks (EANNs), or Evolving Neural Networks. I did this project mainly to get some idea of neural networks, machine learning in a somewhat interesting way. I used this article a lot, and also studied some free content whatever I could get on the internet :)\nWrote this a couple of months back, around May and uploading this on November. There are places, where this codebase and the simulation can be improved\u0026hellip;. Suggestions, bug-reports, bug-fixes are always welcome :)\nHow to play Assuming that you have python installed properly\u0026hellip;\nClone this repo or use the code button in github and download the zip (see this )\nCreate a virtual environment (recommended), so that there will be no conflicts between previously installed packages and the packages we will install now. At first cd into the downloaded repo, then issue the command: python3 -m pip venv\nDepending on the OS, the command to activate your virtual environment will be: .\\venv\\Scripts\\activate.ps1 (issue a PR if something is wrong here) or source venv\\bin\\activate (On closing the terminal the virtual environment will be gone, you should do step 3 again)\nTo install libraries used in this project, issue the command: pip install -r requirements.txt\nLast step: python main.py\nUse UP and DOWN arrow to increase the speed of the simulation and vice-versa.\nTo change settings, like resolution etc, edit the settings.py file.\n","permalink":"https://dev-abir.github.io/projects/aiplays-python/","summary":"ðŸ”— Github repo AI plays-python A simple flappy bird game, written in Python, where the player is AI.\nA flock of birds will try to survive in this game (rather environment), the best ones will continue, rest will die. Much like our evolution :)\nIt uses the concept of Evolutionary artificial neural networks (EANNs), or Evolving Neural Networks. I did this project mainly to get some idea of neural networks, machine learning in a somewhat interesting way.","title":"AI plays-python"},{"content":"ðŸ”— Github repo ChitChat A simple chat application, with chat rooms.\nLive demo Mainly used react for the frontend and django , and django channels for the backend.\nThanks to the open source libraries and websites like: framer-motion , tailwindcss , animista , djangochannelsrestframework (although I haven\u0026rsquo;t used this in the final app) etc\u0026hellip;\nTo install dependencies, use: pip install -r requirements.txt or just: pip install Django channels daphne python-decouple\nCreate a .env file and put a SECRET_KEY there, or decleare a SECRET_KEY environment variable.\nTo create a secret key: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'\nuse command daphne chitchat_server_project.asgi:application to start the server in production mode. Also make debug=False in production (use daphne -p $PORT ... if you are using a custom port environment variable).\n","permalink":"https://dev-abir.github.io/projects/chitchat/","summary":"ðŸ”— Github repo ChitChat A simple chat application, with chat rooms.\nLive demo Mainly used react for the frontend and django , and django channels for the backend.\nThanks to the open source libraries and websites like: framer-motion , tailwindcss , animista , djangochannelsrestframework (although I haven\u0026rsquo;t used this in the final app) etc\u0026hellip;\nTo install dependencies, use: pip install -r requirements.txt or just: pip install Django channels daphne python-decouple","title":"ChitChat"},{"content":"ðŸ”— Github repo chlorophyll A simple Plant disease detector APP, using image classification (Machine Learning) technique.\nOriginal paper URL: https://arxiv.org/abs/1511.08060 Dataset URL: https://data.mendeley.com/datasets/tywbtsjrjv/1 https://www.tensorflow.org/datasets/catalog/plant_village ","permalink":"https://dev-abir.github.io/projects/chlorophyll/","summary":"ðŸ”— Github repo chlorophyll A simple Plant disease detector APP, using image classification (Machine Learning) technique.\nOriginal paper URL: https://arxiv.org/abs/1511.08060 Dataset URL: https://data.mendeley.com/datasets/tywbtsjrjv/1 https://www.tensorflow.org/datasets/catalog/plant_village ","title":"chlorophyll"},{"content":"ðŸ”— Github repo Currency Exchange A simple react app, mainly to learn react, mui and css.\nThanks to this repo for the API.\nThis project was bootstrapped with Create React App .\nLive demo Steps to run In the project directory, you can run:\nyarn install To install the libraries used here.\nyarn start Runs the app in the development mode.\nOpen http://localhost:3000 to view it in your browser.\nThe page will reload when you make changes.\nYou may also see any lint errors in the console.\nyarn build Builds the app for production to the build folder.\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n","permalink":"https://dev-abir.github.io/projects/currency-exchange/","summary":"ðŸ”— Github repo Currency Exchange A simple react app, mainly to learn react, mui and css.\nThanks to this repo for the API.\nThis project was bootstrapped with Create React App .\nLive demo Steps to run In the project directory, you can run:\nyarn install To install the libraries used here.\nyarn start Runs the app in the development mode.\nOpen http://localhost:3000 to view it in your browser.\nThe page will reload when you make changes.","title":"Currency Exchange"},{"content":"ðŸ”— Github repo multiplayer_tic_tac_toe A simple multiplayer tic-tac-toe game, in flask.\nNote: Remove the pkg-resources==0.0.0 line from the requirements.txt file, before deploying(like, to Heroku), or else it may cause problems, during pakages\u0026rsquo; installation\u0026hellip;\n","permalink":"https://dev-abir.github.io/projects/multiplayer_tic_tac_toe/","summary":"ðŸ”— Github repo multiplayer_tic_tac_toe A simple multiplayer tic-tac-toe game, in flask.\nNote: Remove the pkg-resources==0.0.0 line from the requirements.txt file, before deploying(like, to Heroku), or else it may cause problems, during pakages\u0026rsquo; installation\u0026hellip;","title":"multiplayer_tic_tac_toe"},{"content":"ðŸ”— Github repo quiz A simple quiz app in React Native and TypeScript\nHow to run You must have nodejs , and yarn installed. Run \u0026ldquo;yarn\u0026rdquo; in project\u0026rsquo;s root folder, then run \u0026ldquo;yarn start\u0026rdquo;. Then, use the expo go app to run this React Native project. You may also open this app in a web browser. Just follow the instructions in the terminal. ","permalink":"https://dev-abir.github.io/projects/quiz/","summary":"ðŸ”— Github repo quiz A simple quiz app in React Native and TypeScript\nHow to run You must have nodejs , and yarn installed. Run \u0026ldquo;yarn\u0026rdquo; in project\u0026rsquo;s root folder, then run \u0026ldquo;yarn start\u0026rdquo;. Then, use the expo go app to run this React Native project. You may also open this app in a web browser. Just follow the instructions in the terminal. ","title":"quiz"},{"content":"Internship at JMD web studio Worked in Node.js, Socket.io, React.js, Java. Built chat system, user report and admin dashboard. We have deployed multiple apps in playstore. Some of them has web version as well. I was a backend software engineer intern there. This is an app I actively worked on. Freelancing (Truelancer) Worked on couple of projects in Django, react native. Mainly adding features and fixing bugs. [proifile link] NASA Spaceapps 2021 Hackathon We developed LuCon, a software to communicate with the astronauts on the moon and the base station. [project link] ","permalink":"https://dev-abir.github.io/experience/","summary":"Internship at JMD web studio Worked in Node.js, Socket.io, React.js, Java. Built chat system, user report and admin dashboard. We have deployed multiple apps in playstore. Some of them has web version as well. I was a backend software engineer intern there. This is an app I actively worked on. Freelancing (Truelancer) Worked on couple of projects in Django, react native. Mainly adding features and fixing bugs. [proifile link] NASA Spaceapps 2021 Hackathon We developed LuCon, a software to communicate with the astronauts on the moon and the base station.","title":"Experience"}]